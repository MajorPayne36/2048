{"version":3,"sources":["GameBoard.js","GameController.jsx","App.js","index.js"],"names":["hasValue","board","value","i","length","j","getRandomPosition","Math","floor","random","generateRandom","isFull","row","col","compress","newBoard","colIndex","moveLeft","newBoard2","merge","reverse","reverseBoard","moveRight","reversedBoard","rotateLeft","rotateBoard","rotateRight","moveUp","moveDown","hasDiff","updatedBoard","Cell","number","className","GameController","useState","updateBoard","checkEndGame","checkWin","isOver","message","error","success","onKeyDown","e","key","left","right","up","down","useEffect","window","addEventListener","removeEventListener","map","cell","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17ac478a.chunk.js","sourcesContent":["export const getEmptyBoard = () => [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0]\n];\n\nconst hasValue = (board, value) => {\n    for (let i = 0; i < board.length; i++) {\n        for (let j = 0; j < board[i].length; j++) {\n            if (board[i][j] === value) {\n                return true;\n            }\n        }\n    }\n    return false;\n};\n\nexport const isFull = (board) => {\n    return !hasValue(board, 0);\n};\n\nconst getRandomPosition = () => {\n    const rowPosition = Math.floor(Math.random() * 4);\n    const colPosition = Math.floor(Math.random() * 4);\n    return [rowPosition, colPosition];\n};\n\nexport const generateRandom = (board) => {\n    if (isFull(board)) {\n        return board;\n    }\n\n    let [row, col] = getRandomPosition();\n    while (board[row][col] !== 0) {\n        [row, col] = getRandomPosition();\n    }\n\n    board[row][col] = 2;\n    return board;\n};\n\nconst compress = (board) => {\n    const newBoard = getEmptyBoard();\n    for (let i = 0; i < board.length; i++) {\n        let colIndex = 0;\n        for (let j = 0; j < board[i].length; j++) {\n            if (board[i][j] !== 0) {\n                newBoard[i][colIndex] = board[i][j];\n                colIndex++;\n            }\n        }\n    }\n    return newBoard;\n};\n\nconst merge = (board) => {\n    for (let i = 0; i < board.length; i++) {\n        for (let j = 0; j < board[i].length - 1; j++) {\n            if (board[i][j] !== 0 && board[i][j] === board[i][j + 1]) {\n                board[i][j] = board[i][j] * 2;\n                board[i][j + 1] = 0;\n            }\n        }\n    }\n\n    return board;\n};\n\nexport const moveLeft = (board) => {\n    const newBoard1 = compress(board);\n    const newBoard2 = merge(newBoard1);\n    return compress(newBoard2);\n};\n\nconst reverse = (board) => {\n    const reverseBoard = getEmptyBoard();\n\n    for (let i = 0; i < board.length; i++) {\n        for (let j = 0; j < board[i].length; j++) {\n            reverseBoard[i][j] = board[i][board[i].length - 1 - j];\n        }\n    }\n\n    return reverseBoard;\n};\n\nexport const moveRight = (board) => {\n    const reversedBoard = reverse(board);\n    const newBoard = moveLeft(reversedBoard);\n    return reverse(newBoard);\n};\n\nconst rotateLeft = (board) => {\n    const rotateBoard = getEmptyBoard();\n\n    for (let i = 0; i < board.length; i++) {\n        for (let j = 0; j < board[i].length; j++) {\n            rotateBoard[i][j] = board[j][board[i].length - 1 - i];\n        }\n    }\n\n    return rotateBoard;\n};\n\nconst rotateRight = (board) => {\n    const rotateBoard = getEmptyBoard();\n\n    for (let i = 0; i < board.length; i++) {\n        for (let j = 0; j < board[i].length; j++) {\n            rotateBoard[i][j] = board[board[i].length - 1 - j][i];\n        }\n    }\n\n    return rotateBoard;\n};\n\nexport const moveUp = (board) => {\n    const rotateBoard = rotateLeft(board);\n    const newBoard = moveLeft(rotateBoard);\n    return rotateRight(newBoard);\n};\n\nexport const moveDown = (board) => {\n    const rotateBoard = rotateRight(board);\n    const newBoard = moveLeft(rotateBoard);\n    return rotateLeft(newBoard);\n};\n\nexport const checkWin = (board) => {\n    return hasValue(board, 2048);\n};\n\nconst hasDiff = (board, updatedBoard) => {\n    for (let i = 0; i < board.length; i++) {\n        for (let j = 0; j < board[i].length; j++) {\n            if (board[i][j] !== updatedBoard[i][j]) {\n                return true;\n            }\n        }\n    }\n    return false;\n};\n\nexport const isOver = (board) => {\n    if (hasDiff(board, moveLeft(board))) {\n        return false;\n    }\n    if (hasDiff(board, moveRight(board))) {\n        return false;\n    }\n    if (hasDiff(board, moveUp(board))) {\n        return false;\n    }\n    if (hasDiff(board, moveDown(board))) {\n        return false;\n    }\n    return true;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { message } from 'antd';\n\nimport {\n    getEmptyBoard,\n    generateRandom,\n    moveLeft,\n    moveRight,\n    moveUp,\n    moveDown,\n    isOver,\n    checkWin\n} from \"./GameBoard\";\n\nconst Cell = ({ number }) => {\n    return (\n        <div className={`cell cell-${number}`}>{number > 0 ? number : \"\"}</div>\n    );\n};\n\nconst GameController = () => {\n    const [board, updateBoard] = useState(generateRandom(getEmptyBoard()));\n\n    const checkEndGame = () => {\n        if (checkWin(board)) {\n            message.success(\"You win!\");\n        } else if (isOver(board)) {\n            message.error(\"Game over!\");\n        }\n    };\n\n    const left = () => {\n        const newBoard = moveLeft(board);\n        updateBoard(generateRandom(newBoard));\n        checkEndGame();\n    };\n\n    const right = () => {\n        const newBoard = moveRight(board);\n        updateBoard(generateRandom(newBoard));\n        checkEndGame();\n    };\n\n    const up = () => {\n        const newBoard = moveUp(board);\n        updateBoard(generateRandom(newBoard));\n        checkEndGame();\n    };\n\n    const down = () => {\n        const newBoard = moveDown(board);\n        updateBoard(generateRandom(newBoard));\n        checkEndGame();\n    };\n\n    const onKeyDown = (e) => {\n        switch (e.key) {\n            case \"ArrowLeft\":\n                left();\n                break;\n            case \"ArrowRight\":\n                right();\n                break;\n            case \"ArrowUp\":\n                up();\n                break;\n            case \"ArrowDown\":\n                down();\n                break;\n\n            default:\n        }\n    };\n\n    useEffect(() => {\n        window.addEventListener(\"keydown\", onKeyDown);\n\n        return () => {\n            window.removeEventListener(\"keydown\", onKeyDown);\n        };\n    });\n\n    return (\n        <>\n            <div className=\"game-board\">\n                {board.map((row, i) => {\n                    return (\n                        <div key={`row-${i}`} className=\"row\">\n                            {row.map((cell, j) => (\n                                <Cell key={`cell-${i}-${j}`} number={cell} />\n                            ))}\n                        </div>\n                    );\n                })}\n            </div>\n        </>\n    );\n};\n\nexport default GameController;\n","import './App.css';\nimport 'antd/dist/antd.css';\nimport GameController from './GameController';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GameController />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}